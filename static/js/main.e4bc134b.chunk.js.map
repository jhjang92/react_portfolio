{"version":3,"sources":["components/Header.js","components/common/api.js","components/common/asyncActionUtils.js","components/ProjectContext.js","components/home/HomeContent.js","components/home/Home.js","components/sub/ProjectList.js","components/sub/Project.js","components/sub/Projects.js","components/sub/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","path","a","axios","get","response","data","id","filter","parseInt","createAsyncDispatcher","type","promiseFn","SUCCES","ERROR","dispatch","rest","error","initialAsyncState","loading","loadingState","createAsyncHandler","key","SUCCESS","state","action","initialState","projects","project","projectsHandler","projectHandler","projectsReducer","Error","ProjectsStateContext","createContext","ProjectsDispatchContext","ProjectTargetIdContext","ProjectsProvider","children","useReducer","targetId","useRef","Provider","value","useProjectsState","useContext","useProjectsDispatch","getProjects","getProject","HomeContent","link","title","src","thumbnail","alt","content","date","Home","fetchData","useEffect","map","onClick","ProjectListItem","ProjectList","Project","match","history","params","useProjectTargetId","ulTag","idx","timeCheck","current","onSlideClick","e","currentTarget","includes","style","transform","setTimeout","href","website","github","ref","number","img","srcAlt","description","goBack","Projects","component","About","App","exact","Boolean","window","location","hostname","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e4bc134b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/Header.scss\";\r\nfunction Header() {\r\n  return (\r\n    <header className=\"Header\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          jaehyuk <span>jang</span>\r\n        </Link>\r\n      </h1>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/about\">ABOUT</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/projects/list\">PROJECT</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nexport async function getProjects(path) {\r\n  const response = await axios.get(path + \"assets/json/projects.json\");\r\n  return response.data;\r\n}\r\nexport async function getProject(id) {\r\n  const response = await axios.get(\"../assets/json/projects.json\");\r\n  return response.data.filter((data) => data.id === parseInt(id))[0];\r\n}\r\n","export default function createAsyncDispatcher(type, promiseFn) {\r\n  const SUCCES = `${type}_SUCCESS`;\r\n  const ERROR = `${type}_ERROR`;\r\n  async function actionHandler(dispatch, ...rest) {\r\n    dispatch({ type });\r\n    try {\r\n      const data = await promiseFn(...rest);\r\n      dispatch({\r\n        type: SUCCES,\r\n        data,\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ERROR,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  return actionHandler;\r\n}\r\n\r\nexport const initialAsyncState = {\r\n  loading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\nconst loadingState = {\r\n  loading: true,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nconst success = (data) => ({\r\n  loading: false,\r\n  data,\r\n  error: null,\r\n});\r\n\r\nconst error = (e) => ({\r\n  loading: false,\r\n  data: null,\r\n  error: e,\r\n});\r\n\r\nexport function createAsyncHandler(type, key) {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const ERROR = `${type}_ERROR`;\r\n\r\n  function handler(state, action) {\r\n    switch (action.type) {\r\n      case type:\r\n        return {\r\n          ...state,\r\n          [key]: loadingState,\r\n        };\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: success(action.data),\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          [key]: error(action.error),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  return handler;\r\n}\r\n","import React, { createContext, useReducer, useContext, useRef } from \"react\";\r\nimport * as api from \"../components/common/api\";\r\nimport createAsyncDispatcher, {\r\n  initialAsyncState,\r\n  createAsyncHandler,\r\n} from \"./common/asyncActionUtils\";\r\n\r\nconst initialState = {\r\n  projects: initialAsyncState,\r\n  project: initialAsyncState,\r\n};\r\n\r\nconst projectsHandler = createAsyncHandler(\"GET_PROJECTS\", \"projects\");\r\nconst projectHandler = createAsyncHandler(\"GET_PROJECT\", \"project\");\r\nfunction projectsReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"GET_PROJECTS\":\r\n    case \"GET_PROJECTS_SUCCESS\":\r\n    case \"GET_PROJECTS_ERROR\":\r\n      return projectsHandler(state, action);\r\n    case \"GET_PROJECT\":\r\n    case \"GET_PROJECT_SUCCESS\":\r\n    case \"GET_PROJECT_ERROR\":\r\n      return projectHandler(state, action);\r\n    default:\r\n      throw new Error(\"Unhandled action type\", action.type);\r\n  }\r\n}\r\n\r\nconst ProjectsStateContext = createContext(null);\r\nconst ProjectsDispatchContext = createContext(null);\r\nconst ProjectTargetIdContext = createContext(null);\r\n\r\nexport function ProjectsProvider({ children }) {\r\n  const [state, dispatch] = useReducer(projectsReducer, initialState);\r\n  const targetId = useRef(\"\");\r\n\r\n  return (\r\n    <ProjectsStateContext.Provider value={state}>\r\n      <ProjectsDispatchContext.Provider value={dispatch}>\r\n        <ProjectTargetIdContext.Provider value={targetId}>\r\n          {children}\r\n        </ProjectTargetIdContext.Provider>\r\n      </ProjectsDispatchContext.Provider>\r\n    </ProjectsStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useProjectsState() {\r\n  const state = useContext(ProjectsStateContext);\r\n  if (!state) {\r\n    throw new Error(\"Cannot find ProjectsProvider\");\r\n  }\r\n  return state;\r\n}\r\nexport function useProjectsDispatch() {\r\n  const dispatch = useContext(ProjectsDispatchContext);\r\n  if (!dispatch) {\r\n    throw new Error(\"Cannot find ProjectsDispatchProvider\");\r\n  }\r\n  return dispatch;\r\n}\r\nexport function useProjectTargetId() {\r\n  const targetId = useContext(ProjectTargetIdContext);\r\n  if (!targetId) {\r\n    throw new Error(\"Cannot find ProjectTargetIdProvider\");\r\n  }\r\n  return targetId;\r\n}\r\nexport const getProjects = createAsyncDispatcher(\r\n  \"GET_PROJECTS\",\r\n  api.getProjects\r\n);\r\nexport const getProject = createAsyncDispatcher(\"GET_PROJECT\", api.getProject);\r\n","import React from \"react\";\r\nimport \"../../styles/home/HomeContent.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HomeContent({ data }) {\r\n  return (\r\n    <article className=\"HomeContent\">\r\n      <Link to={`${data.link}/${data.id}`}>\r\n        <h3>{data.title}</h3>\r\n        <div className=\"thumbnail\">\r\n          <img src={data.thumbnail} alt={data.alt}></img>\r\n        </div>\r\n        <p className=\"content\">{data.content}</p>\r\n      </Link>\r\n      <p className=\"date\">{data.date}</p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default HomeContent;\r\n","import React, { useEffect } from \"react\";\r\nimport HomeContent from \"./HomeContent\";\r\nimport \"../../styles/home/Home.scss\";\r\nimport {\r\n  getProjects,\r\n  useProjectsState,\r\n  useProjectsDispatch,\r\n} from \"../ProjectContext\";\r\n\r\nfunction Home() {\r\n  const state = useProjectsState();\r\n  const dispatch = useProjectsDispatch();\r\n\r\n  const { loading, data: projects, error } = state.projects;\r\n\r\n  const fetchData = () => {\r\n    getProjects(dispatch, \"\");\r\n  };\r\n  useEffect(() => {\r\n    if (projects) return;\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생..</div>;\r\n  if (!projects)\r\n    return (\r\n      <button type=\"button\" onClick={fetchData}>\r\n        불러오기\r\n      </button>\r\n    );\r\n  return (\r\n    <section className=\"Home\">\r\n      <h2>Portfolio - 포트폴리오</h2>\r\n      {projects.map((data) => (\r\n        <HomeContent key={data.id} data={data} />\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport \"../../styles/sub/PorjectList.scss\";\r\nimport {\r\n  getProjects,\r\n  useProjectsState,\r\n  useProjectsDispatch,\r\n} from \"../ProjectContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ProjectListItem({ projects }) {\r\n  return (\r\n    <ul className=\"ProjectListItem\">\r\n      {projects.map((data) => (\r\n        <li key={data.id}>\r\n          <Link to={`${data.link}/${data.id}`}>\r\n            <strong>{data.title}</strong>\r\n            <p>{data.content}</p>\r\n            <span>{data.date}</span>\r\n            <div className=\"thumBox\">\r\n              <img src={`../${data.thumbnail}`} alt={data.alt}></img>\r\n            </div>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction ProjectList() {\r\n  const state = useProjectsState();\r\n  const dispatch = useProjectsDispatch();\r\n\r\n  const { loading, data: projects, error } = state.projects;\r\n\r\n  const fetchData = () => {\r\n    getProjects(dispatch, \"../\");\r\n  };\r\n  useEffect(() => {\r\n    if (projects) return;\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생..</div>;\r\n  if (!projects)\r\n    return (\r\n      <button type=\"button\" onClick={fetchData}>\r\n        불러오기\r\n      </button>\r\n    );\r\n  return (\r\n    <section className=\"ProjectList\">\r\n      <h2>Project List</h2>\r\n      <ProjectListItem projects={projects} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport \"../../styles/sub/Project.scss\";\r\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\r\nimport { BsChevronLeft, BsChevronRight } from \"react-icons/bs\";\r\nimport {\r\n  getProject,\r\n  useProjectsState,\r\n  useProjectsDispatch,\r\n  useProjectTargetId,\r\n} from \"../ProjectContext\";\r\n\r\nfunction Project({ match, history }) {\r\n  const { id } = match.params;\r\n  const state = useProjectsState();\r\n  const dispatch = useProjectsDispatch();\r\n  const targetId = useProjectTargetId();\r\n  const { loading, data: project, error } = state.project;\r\n  const ulTag = useRef(null);\r\n  let idx = 0,\r\n    timeCheck = false;\r\n\r\n  const fetchData = () => {\r\n    getProject(dispatch, id);\r\n    targetId.current = id;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (targetId.current === id) return;\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error)\r\n    return <div>에러가 발생 하였습니다. 잠시 후 다시 시도 부탁드립니다.</div>;\r\n  if (!project)\r\n    return (\r\n      <button type=\"button\" onClick={fetchData}>\r\n        다시 시도하기.\r\n      </button>\r\n    );\r\n\r\n  const onSlideClick = (e) => {\r\n    if (!timeCheck) {\r\n      timeCheck = true;\r\n      e.currentTarget.className.includes(\"left\") ? idx++ : idx--;\r\n      if (idx > 0) {\r\n        idx = 0;\r\n      } else if (idx < -2) {\r\n        idx = -2;\r\n      }\r\n      ulTag.current.style.transform = `translateX(${idx * 100}%)`;\r\n      setTimeout(() => {\r\n        timeCheck = false;\r\n      }, 400);\r\n    }\r\n  };\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <article className=\"Project\">\r\n      <h2>{project.title}</h2>\r\n      <div className=\"pageLink\">\r\n        <a href={project.website}>WebSite</a>\r\n        <a href={project.github}>GitHub</a>\r\n      </div>\r\n      <div className=\"slideBox\">\r\n        <div className=\"slider\">\r\n          <ul ref={ulTag}>\r\n            {project.src.map((data) => (\r\n              <li key={data.number}>\r\n                <img src={data.img} alt={data.srcAlt}></img>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <button type=\"button\" className=\"arrowBtn left\" onClick={onSlideClick}>\r\n          <BsChevronLeft />\r\n        </button>\r\n        <button type=\"button\" className=\"arrowBtn right\" onClick={onSlideClick}>\r\n          <BsChevronRight />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"contents\">\r\n        <p>{project.content}</p>\r\n        <p>{project.description}</p>\r\n      </div>\r\n      <div className=\"etc\">\r\n        <button type=\"button\" onClick={goBack}>\r\n          <AiOutlineArrowLeft />\r\n          돌아가기\r\n        </button>\r\n        <span>{project.date}</span>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport Project from \"./Project\";\r\n\r\nfunction Projects() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/projects/list\" component={ProjectList} />\r\n      <Route path=\"/projects/:id\" component={Project} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport \"../../styles/sub/About.scss\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\n\r\nfunction About() {\r\n  return (\r\n    <>\r\n      <section className=\"About\">\r\n        <h2>About</h2>\r\n\r\n        <dl>\r\n          <dt>장재혁 (jaehyuk jang)</dt>\r\n          <dd>\r\n            <p>\r\n              게임과 개발을 사랑하는 개발자 입니다. <br />\r\n              모바일게임회사에서 다양한 업무를 경험했으며 현재는 FE 프론트엔드를\r\n              기초부터 쌓아가고 있습니다. <br />\r\n              개발하는 그 자체를 좋아하며, 프론트엔드, 백엔드, 네이티브 모두\r\n              좋아합니다. <br />\r\n              사용자들이 최소한 불편함을 느끼지 않도록 늘 고민 합니다.\r\n            </p>\r\n          </dd>\r\n        </dl>\r\n\r\n        <dl>\r\n          <dt>Tech</dt>\r\n          <dd>\r\n            <p>\r\n              프론트엔드의 기본기인 <br />\r\n              HTML5(Semantic Markup), CSS3(sass-scss), Javascript(vanilla, es6),\r\n              ajax(RESTAPI) 를 중점적으로 기본기를 다졌습니다. <br />\r\n              현재는 React 의 기본기를 익히며 익숙해지도록 자주 사용하려\r\n              노력합니다. <br />\r\n            </p>\r\n          </dd>\r\n        </dl>\r\n        <a href=\"https://github.com/jhjang92\" className=\"icon\">\r\n          <AiFillGithub />\r\n        </a>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { Route } from \"react-router-dom\";\nimport \"./styles/Main.scss\";\nimport { ProjectsProvider } from \"./components/ProjectContext\";\nimport Home from \"./components/home/Home\";\nimport Projects from \"./components/sub/Projects\";\nimport About from \"./components/sub/About\";\n\nfunction App() {\n  return (\n    <ProjectsProvider>\n      <Header />\n\n      <main className=\"Main\">\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/projects\" component={Projects} />\n      </main>\n    </ProjectsProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}